@using MyPage.Application.Models.Courses;
@model CourseCertificateModel

<div class="course-card">
    <div class="course-certificate">
        @{
            var pageName = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower();
        }
        @if ((User.Identity?.IsAuthenticated ?? false) && pageName == "courses")
        {
            <span class="course-buttons">
                <a asp-controller="Courses" asp-action="Update" asp-route-id="@Model.Id" class="course-button edit-button">
                    <img src="~/img/edit-courses.svg" loading="lazy" />
                </a>
                <a asp-controller="Courses" asp-action="Delete" asp-route-id="@Model.Id" class="course-button delete-button">
                    <img src="~/img/delete.svg" loading="lazy" />
                </a>
            </span>
        }
        <div class="course-tag" onclick="window.open('@Model.GetCertificateImgUrl()','certicate-img')">@Model.Tag.ToUpper()</div>
        <div class="course-certificate-front-shadow" onclick="window.open('@Model.GetCertificateImgUrl()','certicate-img')"></div>
        <img src="@Model.CertificateCardResolutionUrl" alt="certificate" />
    </div>
    <div class="course-title" onclick="window.open('@Model.CourseUrl','platform')">@Model.CurrentTitle</div>
    <div class="course-body">
        <div onclick="window.open('@Model.CourseUrl','platform')">
            <img src="~/img/platform.svg" alt="platform" loading="lazy" /> @Model.Platform
        </div>
        <div onclick="window.open('@Model.InstructorUrl','instructor-page')">
            <img src="~/img/instructor.svg" alt="instructor" loading="lazy" /> @Model.Instructor
        </div>
        <div>
            <img src="~/img/workload.svg" alt="workload" loading="lazy" /> @Model.WorkLoad!.Value.ToString("F1") @LanguageResource["Hours"]
        </div>
    </div>
    <div class="gradient-bar"></div>
</div>